{"version":3,"sources":["componentes/Boxes.js","componentes/NumberBox.js","componentes/ShowHistory.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Boxes","props","react_default","a","createElement","className","children","NumberBox","value","onChange","cambiaVal","type","ShowHistory","history","length","map","item","id","key","neto","total","iva","onClick","elimina","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tax","handleTax","bind","assertThisInitialized","handleTotal","handleNeto","guardaHistory","eliminarFromHistory","setState","toFixed","amount","_this2","target","parseInt","calculaTotal","_this3","_this4","calculaNeto","slice","push","Date","getTime","e","filter","src","logo","alt","ShowGuardar","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ddba6a0c.chunk.js","sourcesContent":["import React from 'react'\n\nexport default (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n          {props.children}\n\n        \n      </div>\n     \n    </div>\n  )\n}\n","import React from 'react'\n\nexport default (props) => {\n  return (\n    <div className=\"form-group mx-sm-3 mb-2\">\n      <input className=\"form-control\" value={props.value} onChange={props.cambiaVal} type=\"number\"></input>\n    </div>\n  )\n}\n","import React from 'react'\nimport Boxes from './Boxes'\n\nexport default (props) => {\n    if(props.history.length === 0){\n        return <div></div>;\n      }\n      return (\n          <Boxes>\n            <div className=\"container\">\n                  <div className=\"row justify-content-center\">\n                    <h4>Historial</h4>\n                    <br />\n                    <table className=\"table\">\n                        <tbody>\n                            <tr>\n                                <th>Neto</th>\n                                <th>Total</th>\n                                <th>Impuesto</th>\n                                <th>...</th>\n                            </tr>\n                                {\n                                    props.history.map((item, id) => \n                                        <tr key={item.id}>\n                                            <td>{item.neto}</td>\n                                            <td>{item.total}</td>\n                                            <td>{item.iva}</td>\n                                            <td><button \n                                                type=\"button\" \n                                                className='btn btn-danger btn-sm' \n                                                value={item.id} \n                                                onClick={props.elimina}\n                                                >x</button></td>\n                                        </tr>\n                                    )\n                                }\n\n    \n                        </tbody>\n                    </table>\n                  </div>\n            </div>\n            \n          </Boxes>\n          \n    \n      );\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Boxes  from \"./componentes/Boxes\";\nimport NumberBox from \"./componentes/NumberBox\";\nimport ShowHistory from \"./componentes/ShowHistory\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {tax: 19, neto:0, total:0, history: []};\n    this.handleTax = this.handleTax.bind(this);\n\n    this.handleTotal = this.handleTotal.bind(this);\n    this.handleNeto = this.handleNeto.bind(this);\n    this.guardaHistory = this.guardaHistory.bind(this);\n    this.eliminarFromHistory = this.eliminarFromHistory.bind(this);\n\n  }\n\n\n  calculaTotal(){\n\n    this.setState({total:(((100+this.state.tax)/100)*this.state.neto).toFixed(2)});\n  }\n\n  calculaNeto(){\n    this.setState({neto:(((100)/(100+this.state.tax))*this.state.total).toFixed(2)});\n  }\n\n\n\n  handleTax(amount){\n    (amount.target.value < 0)\n      ?\n      this.setState({tax: 0}):\n      this.setState({tax: parseInt(amount.target.value)},() => {this.calculaTotal()})\n      ;\n\n  }\n\n  handleNeto(amount){\n    (amount.target.value < 0)\n      ?\n      this.setState({neto: 0}):\n      this.setState({neto: amount.target.value},() => {this.calculaTotal()})\n      ;\n      \n  }\n\n  handleTotal(amount){\n    (amount.target.value < 0)\n      ?\n      this.setState({total: 0}):\n      this.setState({total: amount.target.value},() => {this.calculaNeto()})\n      ;\n  }\n\n  guardaHistory(){\n    let history = this.state.history.slice();\n    history.push({id: (new Date()).getTime(), neto: this.state.neto, total: this.state.total, iva: this.state.tax});\n    this.setState({history});\n  }\n\n  eliminarFromHistory(e){\n    let id = e.target.value;\n    let history = this.state.history.filter(item => parseInt(item.id) !== parseInt(id));\n\n    this.setState({history});\n  }\n\n  ShowGuardar(props){\n    if(props.total != 0.0){\n      return <button className=\"btn btn-primary\" onClick={props.guardaHistory}>Guardar valores</button>;\n    }\n    return <div></div>\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          \n          <Boxes>\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              Porcentaje impuesto: <NumberBox value={this.state.tax} cambiaVal={this.handleTax}/>\n            </div>\n\n            \n              <div className=\"row\">\n                Neto:  <NumberBox value={this.state.neto} cambiaVal={this.handleNeto}/>  |  Total: <NumberBox value={this.state.total} cambiaVal={this.handleTotal}/>\n              </div>\n            </div>\n\n            <this.ShowGuardar total={this.state.total} guardaHistory={this.guardaHistory}/>\n          \n          </Boxes>\n\n\n          <ShowHistory history={this.state.history} elimina={this.eliminarFromHistory} />\n\n          \n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}